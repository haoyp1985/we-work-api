// ===========================
// 工具类 Mixins
// ===========================

// 清除浮动
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// 文字溢出省略号
@mixin ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 绝对居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Flex 居中
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Flex 布局
@mixin flex($direction: row, $align: flex-start, $justify: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
  flex-wrap: $wrap;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs}) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  }
  @if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) {
      @content;
    }
  }
}

// 响应式断点 - max-width
@mixin respond-below($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs - 1}) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm - 1}) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (max-width: #{$breakpoint-md - 1}) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg - 1}) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl - 1}) {
      @content;
    }
  }
  @if $breakpoint == xxl {
    @media (max-width: #{$breakpoint-xxl - 1}) {
      @content;
    }
  }
}

// 阴影效果
@mixin box-shadow($shadow: $box-shadow-base) {
  box-shadow: $shadow;
}

// 过渡动画
@mixin transition($property: all, $duration: $transition-duration-base, $timing: $transition-timing-function) {
  transition: $property $duration $timing;
}

// 渐变背景
@mixin gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 按钮样式
@mixin button-style($bg-color, $text-color: #fff, $border-color: $bg-color) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid $border-color;
  border-radius: $border-radius-base;
  padding: 8px 16px;
  cursor: pointer;
  @include transition();
  
  &:hover {
    background-color: lighten($bg-color, 10%);
    border-color: lighten($border-color, 10%);
  }
  
  &:active {
    background-color: darken($bg-color, 5%);
    border-color: darken($border-color, 5%);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// 卡片样式
@mixin card-style($padding: $base-padding, $radius: $border-radius-base) {
  background: var(--bg-color);
  border: 1px solid var(--border-color-base);
  border-radius: $radius;
  padding: $padding;
  @include box-shadow();
}

// 输入框样式
@mixin input-style {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--border-color-base);
  border-radius: $border-radius-base;
  background: var(--bg-color);
  color: var(--text-color-primary);
  font-size: $font-size-base;
  @include transition(border-color);
  
  &:focus {
    outline: none;
    border-color: $primary-color;
  }
  
  &:disabled {
    background-color: #f5f7fa;
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: var(--text-color-placeholder);
  }
}

// 滚动条样式
@mixin scrollbar($width: 6px, $track-color: transparent, $thumb-color: rgba(144, 147, 153, 0.3)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: rgba(144, 147, 153, 0.5);
    }
  }
}

// 加载动画
@mixin loading-animation {
  @keyframes loading-rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  animation: loading-rotate 1s linear infinite;
}

// 文字截断
@mixin text-truncate($max-width: 100%) {
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文字截断
@mixin text-truncate-multi($lines: 2, $line-height: 1.4) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  line-height: $line-height;
  max-height: calc(#{$line-height} * #{$lines} * 1em);
}

// 强调边框
@mixin highlight-border($color: $primary-color, $width: 2px) {
  border: $width solid $color;
  border-radius: $border-radius-base;
}

// 禁用选择
@mixin no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}