server:
  port: ${PORT:18086}
  servlet:
    context-path: /
  tomcat:
    max-threads: 200
    min-spare-threads: 10

spring:
  application:
    name: ai-agent-service
  
  # 数据库配置
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:ai_agent_platform}?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:ai_agent_user}
    password: ${DB_PASSWORD:ai_agent_password}
    hikari:
      pool-name: AgentServiceHikariPool
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
      leak-detection-threshold: 60000

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:26379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DB:6}
      timeout: 30000
      lettuce:
        pool:
          max-active: 100
          max-idle: 20
          min-idle: 5
          max-wait: 30000

  # RocketMQ配置
  rocketmq:
    name-server: ${ROCKETMQ_NAME_SERVER:localhost:9876}
    producer:
      group: ai-agent-producer-group
      send-message-timeout: 30000
      compress-message-body-threshold: 4096
      max-message-size: 4194304
      retry-times-when-send-failed: 3
      retry-times-when-send-async-failed: 3
      retry-next-server: true
    consumer:
      group: ai-agent-consumer-group
      consume-thread-min: 20
      consume-thread-max: 64
      consume-message-batch-max-size: 1

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    multiple-result-sets-enabled: true
    use-column-label: true
    use-generated-keys: true
    auto-mapping-behavior: partial
    auto-mapping-unknown-column-behavior: warning
    default-executor-type: reuse
    default-statement-timeout: 30
    default-fetch-size: 100
    safe-row-bounds-enabled: false
    map-underscore-to-camel-case: true
    local-cache-scope: session
    jdbc-type-for-null: other
    lazy-load-trigger-methods: equals,clone,hashCode,toString
  global-config:
    db-config:
      id-type: assign_uuid
      table-underline: true
      logic-delete-field: deleted_at
      logic-delete-value: now()
      logic-not-delete-value: 'null'
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.wework.platform.agent.entity

# Swagger配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: alpha
    tags-sorter: alpha
  packages-to-scan: com.wework.platform.agent.controller

# 应用配置
app:
  agent:
    # 外部平台配置
    platforms:
      coze:
        base-url: ${COZE_BASE_URL:https://www.coze.cn}
        timeout: 60000
      dify:
        base-url: ${DIFY_BASE_URL:https://dify.ai}
        timeout: 60000
      alibaba-dashscope:
        base-url: ${ALIBABA_DASHSCOPE_BASE_URL:https://dashscope.aliyuncs.com}
        timeout: 60000
    
    # 模型配置
    models:
      default-timeout: 60000
      max-tokens: 4096
      temperature: 0.7
      top-p: 0.9
    
    # 对话配置
    conversation:
      max-messages: 1000
      default-timeout: 300
      cleanup-interval: 3600
    
    # 调用记录配置
    call-record:
      batch-size: 100
      flush-interval: 5000
      retention-days: 30

# 日志配置
logging:
  level:
    root: INFO
    com.wework.platform.agent: DEBUG
    org.springframework.web: INFO
    org.mybatis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ai-agent-service.log
    max-size: 100MB
    max-history: 30